FROM golang:1.17-buster

ARG KUBECTL_VERSION="v1.24.3"
ARG KIND_VERSION="v0.14.0"

# Install docker, make, git, kubectl, helm
RUN apt-get update && \
    apt-get install --no-install-recommends -y \
      apt-transport-https \
      ca-certificates \
      gnupg2 \
      curl \
      tini \
      git \
      make \
      kmod \
      procps && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \
    echo "deb [arch=amd64] https://download.docker.com/linux/debian buster stable" | tee /etc/apt/sources.list.d/docker.list 

RUN apt-get update && \
    apt-get install --no-install-recommends -y docker-ce && \
    apt-get autoclean && \
    rm -rf /var/lib/apt/lists/* 

RUN apt-get update && \
    apt-get install -y openssh-server python-requests python3-docker python3-pip && \
    pip3 install virtualenv

# Switch to use iptables instead of nftables (to match the CI hosts)
# TODO use some kind of runtime auto-detection instead if/when
# nftables is supported (https://github.com/moby/moby/issues/26824)
RUN update-alternatives --set iptables  /usr/sbin/iptables-legacy || true && \
    update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true && \
    update-alternatives --set arptables /usr/sbin/arptables-legacy || true

# Set up subuid/subgid so that "--userns-remap=default" works
# out-of-the-box.
RUN set -x && \
    addgroup --system dockremap && \
    adduser --system --ingroup dockremap dockremap && \
    echo 'dockremap:165536:65536' >> /etc/subuid && \
    echo 'dockremap:165536:65536' >> /etc/subgid

VOLUME /var/lib/docker
VOLUME /var/log/docker
EXPOSE 2375 2376
ENV container docker

# Install kubectl, kind, helm 
RUN curl -Lso /usr/bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl" && \
    chmod +x /usr/bin/kubectl && \
    curl -Lso /usr/bin/kind "https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64" && \
    chmod +x /usr/bin/kind

RUN  curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && \
     chmod 700 get_helm.sh && \
     ./get_helm.sh
ENV CGO_ENABLED=0
ENV GOOS=linux
# Download most of needed golang librarys
WORKDIR /test/integration
COPY go.mod ./
COPY go.sum ./
COPY test.go ./
RUN go mod download

WORKDIR /
RUN touch /entrypoint-original.sh  && chmod 777 /entrypoint-original.sh
COPY entrypoint-wrapper.sh /entrypoint.sh

EXPOSE 30001
ENTRYPOINT ["/usr/bin/tini", "--", "/entrypoint.sh"]
